name: Docker publish to docker.io and ecr

on:
  release:
    tags:
     - 'v**'
jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v2
      - name: Get branch names
        id: branch-name
        uses: tj-actions/branch-names@v5.2
     
      - name: Running on a tag branch.
        if: steps.branch-name.outputs.is_tag == 'true'
        run: |
          echo "Running on: ${{ steps.branch-name.outputs }}"
        # Outputs: "Running on: v0.0.1".
        
      - name: Get the current tag
        if: steps.branch-name.outputs.is_tag == 'true'  # Replaces: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "${{ steps.branch-name.outputs.tag }}"
        # Outputs: "v0.0.1" OR "0.0.1"
      # - name: Use Node.js ${{ matrix.node-version }}
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: ${{ matrix.node-version }}
      #     cache: "yarn"
      # - uses: docker/setup-qemu-action@v1
      # - uses: docker/setup-buildx-action@v1
      #   with:
      #     driver-opts: network=host
      # - uses: docker/login-action@v1
      #   name: Login Docker Hub
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
      # - name: Prepare docker image tags
      #   id: docker_meta
      #   uses: crazy-max/ghaction-docker-meta@v1
      #   with:
      #     images: steedos/steedos-project-template
      #     tag-custom: 1.x-next
      #     tag-custom-only: ${{ github.ref == 'refs/heads/1.x' }}
      #     tag-semver: |
      #       {{version}}
      #       {{major}}
      #       {{major}}.{{minor}}
      # - name: Build & Push
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     platforms: linux/amd64
      #     push: ${{ github.event_name != 'pull_request' }}
      #     tags: ${{ steps.docker_meta.outputs.tags }}
      #     labels: ${{ steps.docker_meta.outputs.labels }}
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_NINGXIA }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_NINGXIA }}
      #     aws-region: cn-northwest-1
      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v1
      # - name: Tag and push image to Amazon ECR
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     IMAGE_TAG: ${{ steps.docker_meta.outputs.tags }}
      #   run: |
      #     docker pull steedos/steedos-project-template:latest
      #     docker tag steedos/steedos-project-template:latest ${{ env.ECR_REGISTRY }}/dockerhub/steedos/steedos-project-template:${{github.ref_name}}
      #     docker tag steedos/steedos-project-template:latest ${{ env.ECR_REGISTRY }}/dockerhub/steedos/steedos-project-template:latest
      #     docker push ${{ env.ECR_REGISTRY }}/dockerhub/steedos/steedos-project-template:latest
      #     docker push ${{ env.ECR_REGISTRY }}/dockerhub/steedos/steedos-project-template:${{github.ref_name}}